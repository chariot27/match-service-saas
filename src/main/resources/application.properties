spring.application.name=match-service

# Render escuta em $PORT (essencial)
server.port=${PORT:8080}
server.shutdown=graceful
server.http2.enabled=true
server.forward-headers-strategy=framework
server.servlet.context-path=/

# --- Banco (Neon/Postgres) ---
spring.datasource.url=${DB_URL}         
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}

# Pool recomendado p/ serverless
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=0
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000

# --- JPA/Hibernate ---
# Em DEV: create ou update. Em PROD prefira Flyway (veja nota abaixo).
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Garante snake_case físico no Postgres
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

# --- Observabilidade ---
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.probes.enabled=true

# --- CORS ---
cors.allowed-origins=*

# IMPORTANTE: remova spring.sql.init.* (JDBC) para não conflitar com o Hibernate
