spring.application.name=match-service

# Render exige bind em $PORT (NADA de 8091 em produção)
server.port=${PORT:8080}
server.shutdown=graceful
server.http2.enabled=true   
server.forward-headers-strategy=framework
server.servlet.context-path=/

# --- Banco (PostgreSQL/Neon) ---
spring.datasource.url=${DB_URL} 
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}

# Pool enxuto para host serverless
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAX:5}
spring.datasource.hikari.minimum-idle=0
spring.datasource.hikari.idle-timeout=30000          
spring.datasource.hikari.connection-timeout=20000     
spring.datasource.hikari.validation-timeout=5000

# --- Init de schema para JDBC (executa schema.sql no boot) ---
spring.sql.init.mode=always
spring.sql.init.platform=postgres
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.encoding=UTF-8

# --- Observabilidade ---
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.probes.enabled=true

# --- CORS/Web ---
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}
